// 상속

// IsA 관계와 HasA 관계가 있다.
//
// HasA )
// 상속보다는 객체 구성이 더 많다.
// 재 사용하고자 하는 구현의 자료형의 변수를 struct에 내장하면 된다.
// 즉, HasA 관계는 그 구현을 필드로 가짖고 있으면 되는 것이다.
//
// IsA )
// 대부분의 경우에 추상클래스를 상속한다.
// 추상 클래스 중 구현이 없는 경우는 go 언어의 인터페이스를 이용하면 된다.
// 추상클래스가 아닌 클래스를 상속받는 경우는
// 인터페이스와 구현을 함께 상속한다.
// 안토페이스와 구조체 내장을 동시에 하면 가능하다.

// **** 메서드 추가 ****
// 기존 코드를 재사용하면서 기능 추가를 하고 싶은 경우에 상속
